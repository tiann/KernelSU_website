import{_ as e,c as o,o as t,a}from"./app.987ed606.js";const f=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[{"level":2,"title":"Check if your device is supported","slug":"check-if-your-device-is-supported","link":"#check-if-your-device-is-supported","children":[]},{"level":2,"title":"Find proper boot.img","slug":"find-proper-boot-img","link":"#find-proper-boot-img","children":[]},{"level":2,"title":"Flash the boot.img to device","slug":"flash-the-boot-img-to-device","link":"#flash-the-boot-img-to-device","children":[]},{"level":2,"title":"Reboot","slug":"reboot","link":"#reboot","children":[]}],"relativePath":"guide/installation.md"}'),s={name:"guide/installation.md"},n=a(`<h1 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h1><h2 id="check-if-your-device-is-supported" tabindex="-1">Check if your device is supported <a class="header-anchor" href="#check-if-your-device-is-supported" aria-hidden="true">#</a></h2><p>Download the KernelSU manager app from <a href="https://github.com/tiann/KernelSU/releases" target="_blank" rel="noreferrer">github releases</a> or <a href="https://github.com/tiann/KernelSU/actions/workflows/build-manager.yml" target="_blank" rel="noreferrer">github actions</a>, and then install the app to device and open the app:</p><ul><li>If the app shows <code>Unsupported</code>, it means KernelSU is not supported for your device.</li><li>If the app shows <code>Not installed</code>, then your devices is supported by KernelSU.</li></ul><h2 id="find-proper-boot-img" tabindex="-1">Find proper boot.img <a class="header-anchor" href="#find-proper-boot-img" aria-hidden="true">#</a></h2><p>KernelSU provides a general boot.img for GKI devices, you should flash the boot.img to the boot partition of your device.</p><p>You can download the boot.img from <a href="https://github.com/tiann/KernelSU/actions/workflows/build-kernel.yml" target="_blank" rel="noreferrer">github actions for kernel</a>, Please be aware that your should use the right version of boot.img. For example, if your device show that the kernel is <code>5.10.101</code>, then you need to download the <code>5.10.101-xxxx.boot.xxx</code>.</p><p>And also, please check your stock boot.img&#39;s format, you should use the right format, such as <code>lz4</code>„ÄÅ<code>gz</code>.</p><h2 id="flash-the-boot-img-to-device" tabindex="-1">Flash the boot.img to device <a class="header-anchor" href="#flash-the-boot-img-to-device" aria-hidden="true">#</a></h2><p>Connect your device with <code>adb</code> and then execute <code>adb reboot bootloader</code> to enter fastboot mode, and then use this command to flash KernelSU:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">fastboot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">boot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">boot.img</span></span>
<span class="line"></span></code></pre></div><h2 id="reboot" tabindex="-1">Reboot <a class="header-anchor" href="#reboot" aria-hidden="true">#</a></h2><p>When flashed, you should reboot your device:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">fastboot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reboot</span></span>
<span class="line"></span></code></pre></div>`,14),i=[n];function r(l,d,c,h,p,u){return t(),o("div",null,i)}const g=e(s,[["render",r]]);export{f as __pageData,g as default};
